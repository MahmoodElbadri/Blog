@model PostEditRequest
@{
    ViewData["Title"] = "Edit";
}

<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h1>Edit Blog Post - Admin Panel</h1>
    </div>
</div>

@if (Model is not null)
{
    <div class="container py-4">
        <form method="post" asp-action="Edit" asp-controller="Posts">
            <div>
                <label asp-for="ID" class="form-label mt-4"></label>
                <input asp-for="ID" type="text" class="form-control" readonly />
                <span asp-validation-for="ID" class="text-danger"></span>
            </div>
            <div>
                <label asp-for="Header" class="form-label mt-4"></label>
                <input asp-for="Header" type="text" class="form-control" placeholder="Enter Header" />
                <span asp-validation-for="Header" class="text-danger"></span>
            </div>
            <div>
                <label asp-for="PostTitle" class="form-label mt-4"></label>
                <input asp-for="PostTitle" type="text" class="form-control" placeholder="Enter Post Title" />
                <span asp-validation-for="PostTitle" class="text-danger"></span>
            </div>
            <div>
                <label asp-for="Content" class="form-label mt-4"></label>
                <textarea asp-for="Content" id="content" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div>
                <label asp-for="ShortDescription" class="form-label mt-4"></label>
                <input asp-for="ShortDescription" type="text" class="form-control" placeholder="Enter Short Description" />
                <span asp-validation-for="ShortDescription" class="text-danger"></span>
            </div>
            <div>
                <label for="formFile" class="form-label mt-4">Featured Image Upload</label>
                <input class="form-control" type="file" id="featuredImageUpload">
                <span asp-validation-for="FeaturedImageUrl" class="text-danger"></span>
            </div>
            <div>
                <label asp-for="FeaturedImageUrl" class="form-label mt-4"></label>
                <input asp-for="FeaturedImageUrl" type="text" class="form-control" id="featuredImageUrl" placeholder="Enter Feature Image URL" />
                <img src="@Model.FeaturedImageUrl" id="featuredImagePreview" style="@(string.IsNullOrEmpty(Model.FeaturedImageUrl) ? "display: none;" : "display: block;") width: 300px;" alt="Image preview" />
                <span asp-validation-for="FeaturedImageUrl" class="text-danger"></span>
            </div>
            <div>
                <label asp-for="UrlHandle" class="form-label mt-4"></label>
                <input asp-for="UrlHandle" type="text" class="form-control" placeholder="Enter URL Handler" />
                <span asp-validation-for="UrlHandle" class="text-danger"></span>
            </div>
            <div>
                <label asp-for="PublishedDate" class="form-label mt-4"></label>
                <input asp-for="PublishedDate" type="datetime-local" class="form-control" />
                <span asp-validation-for="PublishedDate" class="text-danger"></span>
            </div>
            <div>
                <label asp-for="Author" class="form-label mt-4"></label>
                <input asp-for="Author" type="text" class="form-control" placeholder="Enter Author" />
                <span asp-validation-for="Author" class="text-danger"></span>
            </div>

            <div class="form-check mt-3">
                <input class="form-check-input grey" type="checkbox" id="visible" value="true" asp-for="IsVisible">
                <label class="form-check-label" asp-for="IsVisible">Visible</label>
                <span asp-validation-for="IsVisible" class="text-danger"></span>
            </div>

            <div>
                <label asp-for="SelectedTags" class="form-label mt-4">Select Tags</label>
                <select asp-for="SelectedTags"
                        asp-items="@Model.Tags"
                        multiple
                        placeholder="-- Select Tags --"
                        class="form-select"
                        id="tagDropdown">
                </select>
                <span asp-validation-for="SelectedTags" class="text-danger"></span>
            </div>

            <div class="mt-4 d-flex gap-2">
                <button type="submit" class="btn btn-success flex-fill">Save</button>
                <a class="btn btn-danger flex-fill" asp-action="Index">Back to posts</a>
            </div>
        </form>
    </div>
}
else
{
    <div class="container py-4">
        <strong>Post not found</strong>
    </div>
}

<partial name="_ValidationScriptsPartial" />
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/tom-select@2.2.2/dist/js/tom-select.complete.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/froala-editor@latest/js/froala_editor.pkgd.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize tag dropdown with TomSelect
            new TomSelect('#tagDropdown', {
                plugins: ['remove_button'],
                maxItems: 10,
                placeholder: 'Select tags...',
                hideSelected: true,
                render: {
                    option: function (data, escape) {
                        return `<div>${escape(data.text)}</div>`;
                    },
                    item: function (data, escape) {
                        return `<div class="badge bg-primary me-1">${escape(data.text)}</div>`;
                    }
                }
            });

            // Froala Editor
            new FroalaEditor('#content', {
                imageUploadURL: '/api/images'
            });

            // Image Upload
            const featuredImageUpload = document.getElementById('featuredImageUpload');
            const featuredImageUrl = document.getElementById('featuredImageUrl');
            const featuredImagePreview = document.getElementById('featuredImagePreview');

            featuredImageUpload.addEventListener('change', async function (e) {
                const file = e.target.files[0];
                if (!file) return;

                const data = new FormData();
                data.append('image', file);

                try {
                    const response = await fetch('/api/images', {
                        method: "POST",
                        body: data
                    });

                    if (!response.ok) throw new Error("Upload failed");

                    const result = await response.json();
                    featuredImageUrl.value = result.link || result.url || "";
                    featuredImagePreview.src = featuredImageUrl.value;
                    featuredImagePreview.style.display = "block";
                } catch (err) {
                    console.error("Image upload error:", err);
                    alert("Image upload failed.");
                }
            });
        });
    </script>
}
